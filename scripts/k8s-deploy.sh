#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤ Kubernetes

set -e

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ –≤ Kubernetes..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è kubectl
if ! command -v kubectl &> /dev/null; then
    echo "‚ùå kubectl –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ kubectl."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–ª–∞—Å—Ç–µ—Ä—É
if ! kubectl cluster-info &> /dev/null; then
    echo "‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Kubernetes –∫–ª–∞—Å—Ç–µ—Ä—É."
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª–∞—Å—Ç–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ kubectl –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ."
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ namespace
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ namespace..."
kubectl apply -f k8s/namespace.yaml

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤
echo "üîê –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤..."
kubectl apply -f k8s/secret.yaml

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "‚öôÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
kubectl apply -f k8s/configmap.yaml

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ PostgreSQL
echo "üêò –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ PostgreSQL..."
kubectl apply -f k8s/postgres-deployment.yaml

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
kubectl wait --for=condition=ready pod -l app=postgres -n highload-microservice --timeout=300s

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Redis
echo "üî¥ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Redis..."
kubectl apply -f k8s/redis-deployment.yaml

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Redis
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Redis..."
kubectl wait --for=condition=ready pod -l app=redis -n highload-microservice --timeout=300s

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Kafka
echo "üì® –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Kafka..."
kubectl apply -f k8s/kafka-deployment.yaml

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Kafka
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Kafka..."
kubectl wait --for=condition=ready pod -l app=kafka -n highload-microservice --timeout=300s

# –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è minikube)
if command -v minikube &> /dev/null && minikube status &> /dev/null; then
    echo "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ –¥–ª—è minikube..."
    eval $(minikube docker-env)
    docker build -t highload-microservice:latest .
fi

# –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
kubectl apply -f k8s/app-deployment.yaml

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
kubectl wait --for=condition=ready pod -l app=highload-microservice -n highload-microservice --timeout=300s

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ Ingress
echo "üåê –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ Ingress..."
kubectl apply -f k8s/ingress.yaml

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–∏—Å–∞—Ö
echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏:"
echo ""
echo "üîç –°—Ç–∞—Ç—É—Å –ø–æ–¥–æ–≤:"
kubectl get pods -n highload-microservice

echo ""
echo "üåê –°–µ—Ä–≤–∏—Å—ã:"
kubectl get services -n highload-microservice

echo ""
echo "üìà HPA:"
kubectl get hpa -n highload-microservice

# –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ IP
echo ""
echo "üåç –î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é:"
EXTERNAL_IP=$(kubectl get service highload-service -n highload-microservice -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
if [ -n "$EXTERNAL_IP" ]; then
    echo "  –í–Ω–µ—à–Ω–∏–π IP: http://$EXTERNAL_IP"
else
    echo "  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ port-forward –¥–ª—è –¥–æ—Å—Ç—É–ø–∞:"
    echo "  kubectl port-forward service/highload-service 8080:80 -n highload-microservice"
    echo "  –ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:8080"
fi

echo ""
echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: kubectl logs -f deployment/highload-microservice -n highload-microservice"
echo "  –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ: kubectl scale deployment highload-microservice --replicas=5 -n highload-microservice"
echo "  –£–¥–∞–ª–µ–Ω–∏–µ: kubectl delete namespace highload-microservice"
echo ""
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
echo "  Health check: curl http://$EXTERNAL_IP/health"
echo "  –ò–ª–∏ —á–µ—Ä–µ–∑ port-forward: curl http://localhost:8080/health"


